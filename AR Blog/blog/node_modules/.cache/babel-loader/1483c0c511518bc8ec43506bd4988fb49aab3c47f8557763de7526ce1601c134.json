{"ast":null,"code":"export default {\n  data() {\n    // var validatePass = (rule, value, callback) => {\n    //   if (value === \"\") {\n    //     callback(new Error(\"Please input password\"));\n    //   } else {\n    //     if (this.regForm.checkPass !== \"\") {\n    //       this.$refs.regForm.validateField(\"checkPass\");\n    //     }\n    //     callback();\n    //   }\n    // };\n    // var validatePass2 = (rule, value, callback) => {\n    //   if (value === \"\") {\n    //     callback(new Error(\"Please input password again\"));\n    //   } else if (value !== this.regForm.password) {\n    //     callback(new Error(\"The two passwords do not match!\"));\n    //   } else {\n    //     callback();\n    //   }\n    // };\n    return {\n      loading: false,\n      status: 1,\n      loginForm: {\n        username: \"\",\n        password: \"\"\n      },\n      loginRules: {\n        username: [{\n          required: true,\n          message: \"Please input username\",\n          trigger: \"blur\"\n        }],\n        password: [{\n          required: true,\n          message: \"Please input password\",\n          trigger: \"blur\"\n        }]\n      },\n      regForm: {\n        username: \"\",\n        password: \"\",\n        nickname: \"\"\n      },\n      regRules: {\n        username: [{\n          required: true,\n          message: \"Please input username\",\n          trigger: \"blur\"\n        }],\n        password: [{\n          required: true,\n          message: \"Please input password\",\n          trigger: \"blur\"\n        }],\n        nickname: [{\n          required: true,\n          message: \"Please input nickname\",\n          trigger: \"blur\"\n        }]\n      }\n    };\n  },\n  methods: {\n    signIn() {\n      this.$refs[\"loginForm\"].validate(valid => {\n        if (valid) {\n          this.loading = true;\n          this.$axios.post(\"/api/user/login\", this.loginForm).then(res => {\n            console.log(res);\n          });\n          setTimeout(() => {\n            this.loading = false;\n            // this.$store.commit(\"changeIsSignIn\", 1);\n            // this.$router.push({ name: \"home\" });\n          }, 1500);\n        } else {\n          console.log(\"error submit!\");\n          return false;\n        }\n      });\n    },\n    signUp() {\n      this.$refs[\"regForm\"].validate(valid => {\n        if (valid) {\n          this.$axios.post(\"/api/user/register\", this.regForm).then(res => {\n            console.log(res);\n          });\n        } else {\n          console.log(\"error submit!\");\n          return false;\n        }\n      });\n    },\n    toSignUp() {\n      this.status = 2;\n    },\n    toSignIn() {\n      this.status = 1;\n    }\n  }\n};","map":{"version":3,"mappings":"AAkFA;EACAA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;MACAC;MACAC;MACAC;QACAC;QACAC;MACA;MACAC;QACAF,WACA;UAAAG;UAAAC;UAAAC;QAAA,EACA;QACAJ,WACA;UAAAE;UAAAC;UAAAC;QAAA;MAEA;MACAC;QACAN;QACAC;QACAM;MACA;MACAC;QACAR,WACA;UAAAG;UAAAC;UAAAC;QAAA,EACA;QACAJ,WACA;UAAAE;UAAAC;UAAAC;QAAA,EACA;QACAE,WACA;UAAAJ;UAAAC;UAAAC;QAAA;MAEA;IACA;EACA;EACAI;IACAC;MACA;QACA;UACA;UACA,oDACAC;YACAC;UAEA;UACAC;YACA;YACA;YACA;UACA;QACA;UACAD;UACA;QACA;MACA;IACA;IACAE;MACA;QACA;UACA,YACAC,yCACAJ;YACAC;UACA;QACA;UACAA;UACA;QACA;MACA;IACA;IAEAI;MACA;IACA;IACAC;MACA;IACA;EACA;AACA","names":["data","loading","status","loginForm","username","password","loginRules","required","message","trigger","regForm","nickname","regRules","methods","signIn","then","console","setTimeout","signUp","post","toSignUp","toSignIn"],"sourceRoot":"src/views","sources":["Login.vue"],"sourcesContent":["<template>\n  <div class=\"sign_box\">\n    <div class=\"signIn\" v-if=\"status == 1\">\n      <el-form\n        :model=\"loginForm\"\n        ref=\"loginForm\"\n        :rules=\"loginRules\"\n        label-width=\"0px\"\n        :inline=\"false\"\n        size=\"normal\"\n        key=\"login\"\n      >\n        <el-form-item prop=\"username\">\n          <el-input\n            v-model=\"loginForm.username\"\n            placeholder=\"Please input username\"\n          ></el-input>\n        </el-form-item>\n        <el-form-item prop=\"password\">\n          <el-input\n            type=\"password\"\n            v-model=\"loginForm.password\"\n            placeholder=\"Please input password\"\n          ></el-input>\n        </el-form-item>\n        <el-form-item>\n          <el-button class=\"signBtn\" type=\"primary\" @click=\"signIn\"\n            >Login</el-button\n          >\n        </el-form-item>\n      </el-form>\n      <span class=\"signText\" @click=\"toSignUp\">Create Account</span>\n    </div>\n    <div class=\"signUp\" v-else>\n      <el-form\n        :model=\"regForm\"\n        ref=\"regForm\"\n        :rules=\"regRules\"\n        label-width=\"0px\"\n        :inline=\"false\"\n        size=\"normal\"\n        key=\"register\"\n      >\n        <el-form-item prop=\"username\">\n          <el-input\n            v-model=\"regForm.username\"\n            placeholder=\"Please input username\"\n          ></el-input>\n        </el-form-item>\n        <el-form-item prop=\"password\">\n          <el-input\n            type=\"password\"\n            v-model=\"regForm.password\"\n            placeholder=\"Please input password\"\n          ></el-input>\n        </el-form-item>\n        <!-- <el-form-item prop=\"checkPass\">\n          <el-input\n            type=\"password\"\n            v-model=\"regForm.checkPass\"\n            placeholder=\"Please input password again\"\n          ></el-input>\n        </el-form-item> -->\n        <el-form-item prop=\"nickname\">\n          <el-input\n            v-model=\"regForm.nickname\"\n            placeholder=\"Please input nickname\"\n          ></el-input>\n        </el-form-item>\n        <el-form-item>\n          <el-button class=\"signBtn\" type=\"primary\" @click=\"signUp\"\n            >signUp</el-button\n          >\n        </el-form-item>\n      </el-form>\n      <span class=\"signText\" @click=\"toSignIn\">Back to Login</span>\n    </div>\n    <div v-loading.fullscreen.lock=\"loading\"></div>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    // var validatePass = (rule, value, callback) => {\n    //   if (value === \"\") {\n    //     callback(new Error(\"Please input password\"));\n    //   } else {\n    //     if (this.regForm.checkPass !== \"\") {\n    //       this.$refs.regForm.validateField(\"checkPass\");\n    //     }\n    //     callback();\n    //   }\n    // };\n    // var validatePass2 = (rule, value, callback) => {\n    //   if (value === \"\") {\n    //     callback(new Error(\"Please input password again\"));\n    //   } else if (value !== this.regForm.password) {\n    //     callback(new Error(\"The two passwords do not match!\"));\n    //   } else {\n    //     callback();\n    //   }\n    // };\n    return {\n      loading: false,\n      status: 1,\n      loginForm: {\n        username: \"\",\n        password: \"\",\n      },\n      loginRules: {\n        username: [\n          { required: true, message: \"Please input username\", trigger: \"blur\" },\n        ],\n        password: [\n          { required: true, message: \"Please input password\", trigger: \"blur\" },\n        ],\n      },\n      regForm: {\n        username: \"\",\n        password: \"\",\n        nickname: \"\",\n      },\n      regRules: {\n        username: [\n          { required: true, message: \"Please input username\", trigger: \"blur\" },\n        ],\n        password: [\n          { required: true, message: \"Please input password\", trigger: \"blur\" },\n        ],\n        nickname: [\n          { required: true, message: \"Please input nickname\", trigger: \"blur\" },\n        ],\n      },\n    };\n  },\n  methods: {\n    signIn() {\n      this.$refs[\"loginForm\"].validate((valid) => {\n        if (valid) {\n          this.loading = true;\n          this.$axios.post(\"/api/user/login\", this.loginForm )\n          .then(res => {\n            console.log(res);\n            \n          })\n          setTimeout(() => {\n            this.loading = false;\n            // this.$store.commit(\"changeIsSignIn\", 1);\n            // this.$router.push({ name: \"home\" });\n          }, 1500);\n        } else {\n          console.log(\"error submit!\");\n          return false;\n        }\n      });\n    },\n    signUp() {\n      this.$refs[\"regForm\"].validate((valid) => {\n        if (valid) {\n          this.$axios\n            .post(\"/api/user/register\", this.regForm)\n            .then((res) => {\n              console.log(res);\n            });\n        } else {\n          console.log(\"error submit!\");\n          return false;\n        }\n      });\n    },\n\n    toSignUp() {\n      this.status = 2;\n    },\n    toSignIn() {\n      this.status = 1;\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.sign_box {\n  width: 300px;\n  margin: 200px auto 0;\n  text-align: center;\n  .signText {\n    color: #3878dd;\n    cursor: pointer;\n    &:hover {\n      color: #1760d7;\n    }\n  }\n}\n.signBtn {\n  width: 100%;\n  font-size: 18px;\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}